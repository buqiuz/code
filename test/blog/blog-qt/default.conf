# # 定义HTTP服务器
#     server {
#         listen 80;              # 监听端口

#         server_name buqiu.icu;    # 域名

#         location / {
#              root   /usr/share/nginx/html;
#              index  index.html index.htm;
#              try_files $uri $uri/ /index.html =404;
#         }

#         # 配置代理路径
#         location /api/ {
#             proxy_pass http://buqiu.icu:8088/;        # 转发请求的目标地址，项目后端
#             proxy_set_header Host $host;             # 设置请求头中的Host字段
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#                             # 设置HTTP头中的X-Forwarded-For字段，表示客户端真实IP，多个IP用逗号隔开
#             proxy_set_header X-Real-IP $remote_addr; # 设置请求头中的X-Real-IP字段，表示客户端真实IP
#         }

#         # 配置代理路径
#         location /wapi/ {
#             proxy_pass http://buqiu.icu:8088/;        # 转发请求的目标地址，音乐后端
#         }

#         # 配置错误页面
#         error_page 404 /404.html;           # 404错误页
#         location = /404.html {
#             internal;                       # 不接受外部访问
#             root /usr/share/nginx/html;     # 404错误页文件所在目录
#         }
#     }

#     # # 二级域名反向代理，访问后台
#     # server {
#     #     listen 80;
#     #     server_name blog.buqiu.icu;

#     #     location / {
#     #         proxy_pass http://buqiu.icu:81/; # 实际的后台路径
#     #         client_max_body_size 100M;
#     #         proxy_set_header Host $host;
#     #         proxy_set_header X-Real-IP $remote_addr;
#     #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     #         proxy_set_header X-Forwarded-Proto $scheme;
#     #     }
#     # }



# 定义HTTP服务器
server {
    listen 80;              # 监听端口

    server_name buqiu.icu;    # 域名

    location / {
         root   /usr/share/nginx/html;
         index  index.html index.htm;
         try_files $uri $uri/ /index.html =404;
    }

    # 配置代理路径并添加CORS头
    location /api/ {
        proxy_pass http://buqiu.icu:8088/;        # 转发请求的目标地址，项目后端
        proxy_set_header Host $host;             # 设置请求头中的Host字段
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                        # 设置HTTP头中的X-Forwarded-For字段，表示客户端真实IP，多个IP用逗号隔开
        proxy_set_header X-Real-IP $remote_addr; # 设置请求头中的X-Real-IP字段，表示客户端真实IP
        
        # 添加CORS头
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization';

        # 如果是OPTIONS请求，直接返回204 No Content
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization';
            return 204;
        }
    }

    # 配置代理路径并添加CORS头
    location /wapi/ {
        proxy_pass http://buqiu.icu:3000/;        # 转发请求的目标地址，音乐后端
        
        # 添加CORS头
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization';

        # 如果是OPTIONS请求，直接返回204 No Content
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization';
            return 204;
        }
    }

    # 配置错误页面
    error_page 404 /404.html;           # 404错误页
    location = /404.html {
        internal;                       # 不接受外部访问
        root /usr/share/nginx/html;     # 404错误页文件所在目录
    }
}

# # 二级域名反向代理，访问后台
# server {
#     listen 80;
#     server_name blog.buqiu.icu;

#     location / {
#         proxy_pass http://buqiu.icu:81/; # 实际的后台路径
#         client_max_body_size 100M;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
# }
